-- 
SELECT DEPARTMENT_ID  , COUNT(*)
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID 
ORDER BY DEPARTMENT_ID
;

SELECT * FROM EMPLOYEES 
ORDER BY SALARY DESC ; 

SELECT * FROM EMPLOYEES 
ORDER BY FIRST_NAME DESC ; 

-- HOW ABOUT ORDERING BY COLUMN NUMBER RATHER THAN NAME 
-- IN SQL THERE AINT NO 0 INDEX , INDEX START WITH 1 
SELECT * FROM EMPLOYEES 
ORDER BY  2  DESC ; 


--- GETTING DISTINCT VALUE FROM THE TABLE 

--	1.1  GET UNIQUE MANAGER_IDs from Employees Table 

SELECT DISTINCT MANAGER_ID 
FROM EMPLOYEES ; 

-- FIND OUT UNIQUE FIRST_NAME IN EMPLOYEE TABLE 
SELECT DISTINCT FIRST_NAME 
FROM EMPLOYEES ; 

-- FIND OUT THE COUNT OF UNIQUE FIRST NAME 
SELECT COUNT(  DISTINCT FIRST_NAME   ) AS UNIQUE_NAME_COUNT
FROM EMPLOYEES ; 

--3,  USING EMPLOYEES TABLE 
--	FIND OUT HOW MANY EMPLOYEES EACH MANAGER MANAGE (group by manager_id)

-- IF YOU HAVE MORE THAN ONE WORD 
--AND IF YOU DO NOT WANT UNDRSCORE ,
-- YOU CAN USE QUOTATION TO WRAP UP THE ALIAS

SELECT MANAGER_ID , COUNT(*) AS "NUM OF EMP"  
FROM EMPLOYEES 
GROUP BY MANAGER_ID 
ORDER BY 1
; 

--	-- continue above 
--		3.1 -- find out manager who mange more than 10 employees 
SELECT MANAGER_ID , COUNT(*) AS "NUM OF EMP"  
FROM EMPLOYEES 
GROUP BY MANAGER_ID 
HAVING COUNT(*) > 10 ; 
--		3.2 -- find out manager who manage exactly 6 employees 
SELECT MANAGER_ID , COUNT(*) AS "NUM OF EMP"  
FROM EMPLOYEES 
GROUP BY MANAGER_ID 
HAVING COUNT(*) = 6 ; 

--5.0 GET THE COUNT OF EMPLOYEE THAT HAVE EXACTLY 5 CHARACTERS IN FIRST NAME (no need for group by)

SELECT COUNT(FIRST_NAME) AS NAME_WITH_5_CHARS
FROM EMPLOYEES 
WHERE LENGTH(FIRST_NAME) = 5 ; 


-- GROUP THE FIRST NAME BY THE CHARACTER COUNT IN EMPLOYEES TABLE 
-- NAME_LENGTH  , NAME_COUNT
SELECT LENGTH(FIRST_NAME)  AS  NAME_LENGTH   , COUNT(*) AS NAME_COUNT
FROM EMPLOYEES 
GROUP BY LENGTH(FIRST_NAME) 
ORDER BY 1
;

-- (THIS IS NOT GROUP BY TASK )
-- SORT THE FIRST NAME BY CHARACTER COUNT OF FIRST NAME IN EMPLOYEES TABLE 
SELECT FIRST_NAME 
FROM EMPLOYEES 
ORDER BY LENGTH(FIRST_NAME) ; 

--- ORDERING BY 2 COLUMNS 
-- SORT EMPLOYEES TABLE BY FIRST_NAME ASC , 
-- IF FIRST NAMES ARE THE SAME , THEN ORDER BY LAST NAME ASC

SELECT FIRST_NAME , LAST_NAME 
FROM EMPLOYEES 
ORDER BY FIRST_NAME ASC , LAST_NAME ASC ; 



--- Relational Database 
---consists of tables that related to each other 

-- Each and every table has a unique identifier column 
-- known as Primary Key 
-- This column can not have duplicate value and can not be null 








